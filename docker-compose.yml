version: "3.8"

services:
  haproxy:
    image: haproxy:2.8-alpine
    container_name: haproxy
    restart: always
    security_opt:
      - no-new-privileges:true
    depends_on:
      - node-app
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "27017:27017"
    networks:
      - haproxy-network
      - cloudlunacy-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/haproxy:/usr/local/etc/haproxy
      - ./config/certs:/etc/ssl/certs
      - /var/log/haproxy:/var/log/haproxy
    env_file:
      - ./.env
    environment:
      - TZ=UTC
      - CF_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./config/certs:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
      - ./config/certbot/cloudflare.ini:/etc/cloudflare/cloudflare.ini:ro
    environment:
      - CF_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"

  node-app:
    build:
      context: ./node-app
      dockerfile: Dockerfile
    container_name: cloudlunacy-front
    restart: always
    networks:
      - haproxy-network
      - cloudlunacy-network
    ports:
      - "${NODE_PORT:-3005}:3005"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./node-app/scripts:/app/scripts
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - ./.env
    environment:
      - NODE_PORT=${NODE_PORT:-3005}
      - JWT_SECRET=${JWT_SECRET}
      - MONGO_DOMAIN=${MONGO_DOMAIN:-mongodb.cloudlunacy.uk}
      - APP_DOMAIN=${APP_DOMAIN:-apps.cloudlunacy.uk}
      - HAPROXY_CONTAINER=haproxy
      - NODE_ENV=production
      - NODE_DEBUG=
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  haproxy-network:
    name: haproxy-network
    external: true
  cloudlunacy-network:
    external: true
