version: "3.8"

services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "27017:27017"
    networks:
      - frontend
      - backend
    volumes:
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/traefik/dynamic:/etc/traefik/dynamic:ro
      - ./config/certs:/etc/traefik/certs:ro
      - ./config/certs/private:/etc/traefik/private:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/etc/traefik/acme
    env_file:
      - ./.env
    environment:
      - TZ=UTC
      - CF_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.middlewares=auth-admin@file"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - consul
      - setup-traefik-config

  # New Consul service for KV store
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    restart: unless-stopped
    ports:
      - "8500:8500"  # HTTP API and Web UI
      - "8600:8600/tcp"  # DNS Interface
      - "8600:8600/udp"  # DNS Interface
    networks:
      - frontend
      - backend
    volumes:
      - consul-data:/consul/data
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # New service to properly set up config directories and permissions
  setup-traefik-config:
    image: busybox:latest
    container_name: setup-traefik-config
    restart: "no"
    volumes:
      - ./config:/config
    command: >
      sh -c "
        mkdir -p /config/traefik/dynamic &&
        touch /config/traefik/dynamic/routes.yml &&
        echo '# Dynamic routes configuration for Traefik' > /config/traefik/dynamic/routes.yml &&
        echo '# This file is managed by the CloudLunacy Front API' >> /config/traefik/dynamic/routes.yml &&
        echo 'http:' >> /config/traefik/dynamic/routes.yml &&
        echo '  routers:' >> /config/traefik/dynamic/routes.yml &&
        echo '    traefik-healthcheck:' >> /config/traefik/dynamic/routes.yml &&
        echo '      entryPoints:' >> /config/traefik/dynamic/routes.yml &&
        echo '        - \"traefik\"' >> /config/traefik/dynamic/routes.yml &&
        echo '      rule: \"Path(`/ping`)\"' >> /config/traefik/dynamic/routes.yml &&
        echo '      service: \"api@internal\"' >> /config/traefik/dynamic/routes.yml &&
        echo '  services:' >> /config/traefik/dynamic/routes.yml &&
        echo '    dummy-service:' >> /config/traefik/dynamic/routes.yml &&
        echo '      loadBalancer:' >> /config/traefik/dynamic/routes.yml &&
        echo '        servers:' >> /config/traefik/dynamic/routes.yml &&
        echo '          - url: \"http://localhost:3005\"' >> /config/traefik/dynamic/routes.yml &&
        echo 'tcp:' >> /config/traefik/dynamic/routes.yml &&
        echo '  routers: {}' >> /config/traefik/dynamic/routes.yml &&
        echo '  services: {}' >> /config/traefik/dynamic/routes.yml &&
        chmod -R 777 /config/traefik/dynamic &&
        echo 'Traefik configuration directories and permissions set up successfully'
      "

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    networks:
      - frontend
      - backend
    volumes:
      - ./config/certs:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
      - ./config/certbot/cloudflare.ini:/etc/cloudflare/cloudflare.ini:ro
    environment:
      - CF_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"

  node-app:
    build:
      context: ./node-app
      dockerfile: Dockerfile
    container_name: cloudlunacy-front
    restart: always
    networks:
      - frontend
      - backend
    ports:
      - "${NODE_PORT:-3005}:3005"
    volumes:
      - ./config:/app/config:rw
      - ./logs:/app/logs:rw
      - ./node-app/scripts:/app/scripts:ro
      - ./config/certs:/app/config/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - node-app-data:/opt/cloudlunacy_front
    user: "node"
    env_file:
      - ./.env
    environment:
      - NODE_PORT=${NODE_PORT:-3005}
      - JWT_SECRET=${JWT_SECRET}
      - MONGO_DOMAIN=${MONGO_DOMAIN:-mongodb.cloudlunacy.uk}
      - APP_DOMAIN=${APP_DOMAIN:-apps.cloudlunacy.uk}
      - TRAEFIK_CONTAINER=traefik
      - NODE_ENV=production
      - NODE_DEBUG=
      - LOG_DIR=/app/logs
      - TRAEFIK_CONFIG_PATH=/app/config/traefik
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      - consul
      - setup-traefik-config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-app.rule=Host(`api.${APP_DOMAIN:-cloudlunacy.uk}`)"
      - "traefik.http.routers.node-app.entrypoints=websecure"
      - "traefik.http.routers.node-app.tls=true"
      - "traefik.http.services.node-app.loadbalancer.server.port=3005"
      - "traefik.http.middlewares.node-app-security.headers.frameDeny=true"
      - "traefik.http.middlewares.node-app-security.headers.sslRedirect=true"
      - "traefik.http.routers.node-app.middlewares=node-app-security"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  node-data:
  certbot-data:
  traefik-data:
  node-app-data:
  consul-data:

networks:
  frontend:
    name: cloudlunacy-frontend
    driver: bridge
  backend:
    name: cloudlunacy-backend
    driver: bridge
