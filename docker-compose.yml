version: "3.8"

services:
  haproxy:
    image: haproxytech/haproxy-ubuntu:latest
    container_name: haproxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "27017:27017"
      - "5555:5555" # Data Plane API port
    networks:
      - frontend
      - backend
    volumes:
      - ./config/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
      - ./config/haproxy/dataplaneapi.yml:/usr/local/etc/haproxy/dataplaneapi.yml:rw
      - ./haproxy-dockerfile/custom-entrypoint.sh:/usr/local/bin/custom-entrypoint.sh:ro
      - ./haproxy-dockerfile/install-dataplaneapi.sh:/usr/local/bin/install-dataplaneapi.sh:ro
      - ./config/haproxy/docker-entrypoint-wrapper.sh:/usr/local/bin/docker-entrypoint-wrapper.sh:ro
      # Certificate management tools
      - ./config/haproxy/certificate-precheck.sh:/usr/local/etc/haproxy/certificate-precheck.sh:ro
      - ./haproxy-dockerfile/sync-certificates.sh:/usr/local/bin/sync-certificates.sh:ro
      # Certificate directories
      - ./config/certs:/etc/ssl/certs:ro
      - ./config/certs/private:/etc/ssl/private:ro
      - haproxy-data:/etc/haproxy/dataplaneapi
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log/haproxy:/var/log/haproxy
      - ./config/haproxy/errors:/etc/haproxy/errors:ro
    entrypoint: ["/usr/local/bin/custom-entrypoint.sh"]
    env_file:
      - ./.env
    environment:
      - TZ=UTC
      - CF_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
      # Data Plane API Configuration
      - HAPROXY_API_USER=admin
      - HAPROXY_API_PASS=admin
    healthcheck:
      # Use a shell format to properly handle the logic
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:5555/v3/health || curl -f http://localhost:8081/health || exit 0",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    networks:
      - frontend
      - backend
    volumes:
      - ./config/certs:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
      - ./config/certbot/cloudflare.ini:/etc/cloudflare/cloudflare.ini:ro
    environment:
      - CF_EMAIL=${CF_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"

  node-app:
    build:
      context: ./node-app
      dockerfile: Dockerfile
    container_name: cloudlunacy-front
    restart: always
    networks:
      - frontend
      - backend
    ports:
      - "${NODE_PORT:-3005}:3005"
    volumes:
      - ./config:/app/config:rw
      - ./logs:/app/logs:rw
      - ./node-app/scripts:/app/scripts:ro
      - ./config/certs:/app/config/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - node-app-data:/opt/cloudlunacy_front
    user: "node"
    env_file:
      - ./.env
    environment:
      - NODE_PORT=${NODE_PORT:-3005}
      - JWT_SECRET=${JWT_SECRET}
      - MONGO_DOMAIN=${MONGO_DOMAIN:-mongodb.cloudlunacy.uk}
      - APP_DOMAIN=${APP_DOMAIN:-apps.cloudlunacy.uk}
      - HAPROXY_CONTAINER=haproxy
      - HAPROXY_API_URL=http://haproxy:5555/v3
      - HAPROXY_API_USER=admin
      - HAPROXY_API_PASS=admin
      - NODE_ENV=production
      - NODE_DEBUG=
      - HAPROXY_OPTIONAL=true
      - LOG_DIR=/app/logs
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  node-data:
  certbot-data:
  haproxy-data:
  node-app-data:

networks:
  frontend:
    name: haproxy-network
    external: true
  backend:
    name: cloudlunacy-network
    external: true
