# HAProxy Configuration for CloudLunacy Front Server
global
    log stdout format raw local0 info
    log stderr format raw local1 notice
    stats socket /tmp/haproxy.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    maxconn 20000
    
    # Enable runtime API
    stats socket ipv4@127.0.0.1:9999 level admin
    stats timeout 2m

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

# Stats page
frontend stats
    bind *:8081
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:admin_password
    stats admin if TRUE

# Frontend for HTTP traffic
frontend http-in
    bind *:80
    mode http
    option forwardfor
    default_backend node-app-backend
    
# Backend for Node.js app
backend node-app-backend
    mode http
    option httpchk GET /health
    http-check expect status 200
    server node-app cloudlunacy-front:3005 check inter 5s rise 2 fall 3

# Node.js App Backend (keeping for reference, can be removed)
backend node_app
    mode http
    option forwardfor
    server node1 cloudlunacy-front:3005 check inter 5s rise 2 fall 3

# Default MongoDB Backend
backend mongodb_default
    mode tcp
    server mongodb1 127.0.0.1:27018 check

# Backend for Let's Encrypt challenges
backend letsencrypt-backend
    mode http
    server certbot certbot:80

# Empty backend for rejected connections
backend empty-backend
    mode tcp
    timeout server 1s
    server empty-server 127.0.0.1:1 check

# Commented out SSL sections until certificates are available
# Frontend for HTTPS traffic - temporarily disabled
# frontend https-in
#    bind *:443 ssl crt /etc/ssl/certs/fullchain.pem alpn h2,http/1.1
#    mode http
#    option forwardfor
#    default_backend node-app-backend

# Frontend for MongoDB traffic - temporarily disabled
# frontend mongodb-in
#    bind *:27017 ssl crt /etc/ssl/certs/mongodb.pem
#    mode tcp
#    option tcplog
#    default_backend mongodb_default 
