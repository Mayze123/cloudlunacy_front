global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /var/run/haproxy.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # TLS settings
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 prefer-client-ciphers
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-dh-param-file /etc/ssl/certs/dhparam.pem
    
    # Set maximum connection limits
    maxconn 20000
    
    # Enable runtime API
    stats socket ipv4@127.0.0.1:9999 level admin
    stats timeout 2m

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

# Frontend for HTTP traffic - redirects to HTTPS
frontend http-in
    bind *:80
    mode http
    option forwardfor
    
    # Redirect HTTP to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    
    # Let's Encrypt HTTP challenge
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if letsencrypt-acl

# Frontend for HTTPS traffic
frontend https-in
    bind *:443 ssl crt /etc/ssl/certs/fullchain.pem alpn h2,http/1.1
    mode http
    option forwardfor
    
    # Default backend for web applications
    default_backend node-app-backend
    
    # Let's Encrypt HTTP challenge (through HTTPS)
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if letsencrypt-acl
    
    # Stats page
    acl stats-acl path_beg /stats
    use_backend stats-backend if stats-acl

# Frontend for MongoDB traffic
frontend mongodb-in
    bind *:27017 ssl crt /etc/ssl/certs/mongodb.pem
    mode tcp
    option tcplog
    
    # Use TCP/SNI to determine the backend based on agent ID
    # This allows dynamic agent ID subdomains in the format: agentId.mongodb.cloudlunacy.uk
    acl is_mongodb_domain req.ssl_sni -m end .mongodb.cloudlunacy.uk
    
    # Extract the agent ID from the SNI hostname (everything before first dot)
    http-request set-var(txn.agent_id) req.ssl_sni,field(1,'.')
    
    # Use backend based on agent ID if it exists, otherwise use default
    use_backend mongodb-backend-dyn if is_mongodb_domain
    
    # Default backend (reject other connections)
    default_backend empty-backend

# Backend for MongoDB - TLS re-encryption with dynamic agent selection
backend mongodb-backend-dyn
    mode tcp
    option tcp-check
    
    # TLS configuration for re-encryption to the MongoDB server
    server mongodb-agent check ssl verify none sni str(%[var(txn.agent_id)].mongodb.cloudlunacy.uk) ca-file /etc/ssl/certs/ca.crt crt /etc/ssl/certs/client.pem
    
# Backend for Node.js app
backend node-app-backend
    mode http
    option httpchk GET /health
    http-check expect status 200
    cookie AGENTID insert indirect nocache
    server node-app cloudlunacy-front:3005 check

# Backend for Let's Encrypt challenges
backend letsencrypt-backend
    mode http
    server certbot certbot:80

# Backend for stats page
backend stats-backend
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats show-legends
    stats auth admin:admin_password

# Empty backend for rejected connections
backend empty-backend
    mode tcp
    timeout server 1s
    server empty-server 127.0.0.1:1 check 