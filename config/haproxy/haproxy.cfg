# =====================
# Global Configuration
# =====================
global
    log stdout format raw local0 info
    log stderr format raw local1 notice
    stats socket /var/run/haproxy.sock mode 660 level admin expose-fd listeners
    # Add the pidfile directive
    pidfile /var/run/haproxy.pid
    user haproxy
    group haproxy
    daemon
    maxconn 4000
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH

# ===============
# DNS for Docker
# ===============
resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry 1s
    hold valid 10s

# ===============
# Default Section
# ===============
defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    option http-server-close
    option redispatch
    errorfile 503 /etc/haproxy/errors/503.http

# =====================
# Userlist for API Auth (No longer needed for DPAPI frontend)
# =====================
# REMOVE userlist dataplaneapi definition if only used for the removed frontend

# =====================
# Data Plane API Frontend/Backend (REMOVE THESE)
# =====================
# frontend dataplane_api
#    bind *:5555
#    ... (REMOVE ALL LINES FOR THIS FRONTEND/BACKEND) ...
# backend dataplane_api_backend
#    ... (REMOVE ALL LINES FOR THIS BACKEND) ...

# =====================
# Stats Page
# =====================
frontend stats
    bind *:8081
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:admin_password # Consider using a stronger password or userlist
    stats admin if TRUE
    stats show-legends
    stats show-node
    stats show-desc "CloudLunacy HAProxy Statistics"
    # Remove prometheus endpoint if not used, or configure it properly
    # http-request use-service prometheus-exporter if { path /metrics }
    http-request return status 200 content-type "text/plain" string "HAProxy Running" if { path /health }
    acl internal_networks src 127.0.0.1 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    http-request deny unless internal_networks

# =====================
# HTTP Frontend
# =====================
frontend http-in
    bind *:80
    mode http
    option forwardfor
    # Consider if fe_limits stick-table is actually used/needed
    # stick-table type ip size 200k expire 30m store gpc0
    # http-request track-sc0 src
    # acl abuse_10s sc0_http_req_rate(fe_limits) gt 100
    # acl abuse_1m sc0_http_req_rate(fe_limits) gt 500
    # acl abuse_mark sc0_get_gpc0(http-in) gt 0
    # http-request sc-inc-gpc0(0) if abuse_10s || abuse_1m
    # http-request deny if abuse_mark
    redirect scheme https code 301 if !{ ssl_fc }
    default_backend node-app-backend

# =====================
# HTTPS Frontend
# =====================
frontend https-in
    bind *:443 ssl crt /etc/ssl/private/ # Provide path to your cert/key directory or specific file
    # Example: bind *:443 ssl crt /etc/ssl/private/yourdomain.pem
    mode http
    option httplog
    log global
    default_backend node-app-backend

# =====================
# Node.js Backend
# =====================
backend node-app-backend
    mode http
    option httpchk GET /health
    http-check expect status 200
    default-server inter 5s fall 3 rise 2 slowstart 30s
    # Add init-addr none
    server node_app_main node-app:3005 check resolvers docker init-addr none maxconn 100 weight 100
    server node_app_backup 172.20.0.3:3005 backup check
    server node_app_local 127.0.0.1:3005 backup check
    # Consider health check for maintenance mode
    # http-request return status 200 content-type "text/plain" string "Service Maintenance" if { nbsrv(node-app-backend) eq 0 } { path /health }

# =====================
# MongoDB TCP Frontend / Backend (Keep as is if needed)
# =====================
frontend tcp-in
    bind *:27017
    mode tcp
    option tcplog
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    default_backend mongodb_default

backend mongodb_default
    mode tcp
    option redispatch
    timeout connect 10s
    timeout server 60s
    server mongodb-fallback 127.0.0.1:27017 check disabled
    errorfile 503 /etc/haproxy/errors/503.http

# =====================
# Stick Table Frontends (Keep as is if needed, ensure they are used)
# =====================
# frontend fe_limits
#    ...
# frontend fe_host_track
#    ...
# frontend fe_bot_track
#    ...

# End of configuration