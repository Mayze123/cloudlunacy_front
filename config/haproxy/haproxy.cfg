# HAProxy Configuration for CloudLunacy Front Server
global
    log stdout format raw local0 info
    log stderr format raw local1 notice
    stats socket /tmp/haproxy.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    maxconn 20000
    
    # Enable Data Plane API
    stats socket ipv4@0.0.0.0:9999 level admin
    stats timeout 2m
    # Enable built-in runtime API and Prometheus metrics
    stats socket /var/run/haproxy.sock mode 666 level admin expose-fd listeners
    stats timeout 30s

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

# Stats page
frontend stats
    bind *:8081
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:admin_password
    stats admin if TRUE

# Frontend for HTTP traffic
frontend http-in
    bind *:80
    mode http
    option forwardfor
    default_backend node-app-backend
    
# Backend for Node.js app
backend node-app-backend
    mode http
    option httpchk GET /health
    http-check expect status 200
    server node_app node-app:3005 check inter 5s rise 2 fall 3

# MongoDB Frontend with TLS and SNI support
frontend mongodb_frontend
    # Check for SSL certificates and use them if available
    # Otherwise fall back to plain TCP
    bind *:27017
    mode tcp
    option tcplog
    # Extract the agent ID from the SNI hostname for routing (when SSL is used)
    # http-request set-var(txn.agent_id) req.ssl_sni,field(1,'.')
    
    # Add enhanced logging for debugging
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    
    default_backend mongodb_default

# MongoDB Backend
backend mongodb_default
    mode tcp
    balance roundrobin
    # Server entries will be added dynamically by the HAProxy manager
    # Example: server mongodb-agent-123 1.2.3.4:27017 check

# Data Plane API Admin
userlist dataplaneapi
    user ${HAPROXY_API_USER:-admin} insecure-password ${HAPROXY_API_PASS:-admin}

# Data Plane API access control
frontend dataplane_api
    bind *:5555
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth ${HAPROXY_API_USER:-admin}:${HAPROXY_API_PASS:-admin}
    acl authenticated http_auth(dataplaneapi)
    http-request auth realm dataplane_api if !authenticated
    http-request use-service prometheus-exporter if { path /metrics }
    use_backend dataplaneapi if { path_beg /v1/services/haproxy/configuration/ } authenticated
    use_backend dataplaneapi if { path_beg /v2/ } authenticated

backend dataplaneapi
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth ${HAPROXY_API_USER:-admin}:${HAPROXY_API_PASS:-admin}
    option httpchk GET /health
    http-check expect status 200
    server local 127.0.0.1:5555
