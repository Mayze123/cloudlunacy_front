version: "3.8"

services:
  haproxy:
    image: haproxy:2.8-alpine
    container_name: haproxy-dev
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "27017:27017"
    networks:
      - haproxy-network
      - cloudlunacy-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/haproxy:/usr/local/etc/haproxy
      - ./config/certs:/etc/ssl/certs
      - ./logs:/var/log/haproxy
    environment:
      - TZ=UTC
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  node-app:
    build:
      context: ./node-app
      dockerfile: Dockerfile.dev
    container_name: cloudlunacy-front-dev
    restart: unless-stopped
    networks:
      - haproxy-network
      - cloudlunacy-network
    ports:
      - "3005:3005"
    volumes:
      - ./node-app:/app
      - ./config:/app/config
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /app/node_modules
    environment:
      - NODE_PORT=3005
      - JWT_SECRET=dev_secret_key_for_testing_only
      - NODE_ENV=development
      - MONGO_DOMAIN=mongodb.localhost
      - APP_DOMAIN=apps.localhost
      - HAPROXY_CONTAINER=haproxy-dev
      - MONGO_PORT=27017
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3005/health"]
      interval: 1000s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - haproxy

networks:
  haproxy-network:
    name: haproxy-network
    external: true
  cloudlunacy-network:
    name: cloudlunacy-network
    external: true

volumes:
  mongodb-data:
